from PvPair import *
from IncoreIndirects import *
from OndiskIndirects import *
import random
import pickle
import codecs
import base64


def test():
    ind = OnDiskIndirect()
    for i in range(255):
        p = random.getrandbits(64)
        v = random.getrandbits(64)
        ind.add(p,v)

    data = ind.get()

    for item in data:
        print(p, ", ", v)
        print("    ")

def test1():
    L1_ind = S2CIndBlock(97, "t.txt", 4)
    for i in range(255):
        p = random.getrandbits(48)
        v = random.getrandbits(48)
        L1_ind.put_blk(p,v)
    bin_dump = pickle.dumps(L1_ind)
    b64_dump = codecs.encode(bin_dump, 'base64')
    b64_extract = base64.decodebytes(b64_dump)
    L1_ind_Extract = pickle.loads(b64_extract)
    print("Obj", L1_ind)
    print("BinDump ", bin_dump)
    print("B64 dump", b64_dump)
    print("B64 extract", b64_extract)
    print("object extracted", L1_ind_Extract)

    data = L1_ind.get()
    for i in range(2):
        c = bytes(data[i])
    #    print("Byte : ", c[2])
    #    print("Byte array", c)
    #    print("size = ", sizeof(data[i]))
        print("P ->", data[i].pvbn)
        print("V ->", data[i].vvbn)


    data = L1_ind_Extract.get()
    for i in range(2):
        c = bytes(data[i])
    #    print("Byte : ", c[2])
    #    print("Byte array", c)
    #    print("size = ", sizeof(data[i]))
        print("P ->", data[i].pvbn)
        print("V ->", data[i].vvbn)


test1()


